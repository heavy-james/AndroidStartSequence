@startuml
participant ActivityThread as "ActivityThread.java"
participant Activity as "Activity.java"
participant Instrumentation as "Instrumentation.java"

ActivityThread -> Activity : performRestart()

activate Activity
Activity -> Activity : mFragments.noteStateNotSaved();

alt mStopped //resume from stopped state
else true
    Activity -> Activity : WindowManagerGlobal.getInstance().\
    \n setStoppedState(mToken, false);

    Activity -> Activity : mCalled = false;

    Activity -> Instrumentation : callActivityOnRestart(this);

    deactivate Activity
    activate Instrumentation

    Instrumentation -> Activity : activity.onRestart()

    deactivate Instrumentation
    activate Activity

    Activity --> Instrumentation : onRestart return

    deactivate Activity
    activate Instrumentation

    Instrumentation -> Activity : callActivityOnRestart return

    deactivate Instrumentation
    activate Activity

    alt mCalled
    else false
        ActivityThread <-- Activity : throw new SuperNotCalledException(...)
    deactivate Activity
    end

    Activity -> Activity : performStart();
    activate Activity

    ref over Activity : activity_on_start.puml

    ActivityThread <-- Activity : performRestart finished

    deactivate Activity
end

@enduml